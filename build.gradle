plugins {
    id 'java'
    id 'org.springframework.boot' version '3.4.2'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = '9deok'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {

    // [Spring Boot Starter]
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'

    // [JWT]
    implementation 'io.jsonwebtoken:jjwt:0.12.6'

    // [querydsl]
    implementation 'io.github.openfeign.querydsl:querydsl-core:6.10'
    implementation 'io.github.openfeign.querydsl:querydsl-jpa:6.10'
    annotationProcessor "io.github.openfeign.querydsl:querydsl-apt:6.10:jpa"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    // [compile & runtime & test]
    compileOnly 'org.projectlombok:lombok'
    runtimeOnly 'com.h2database:h2'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named('test') {
    useJUnitPlatform()
}

var querydslDir = "src/main/generated"
sourceSets {
    getByName("main").java.srcDir(querydslDir)
}

tasks.withType(JavaCompile) {
    options.generatedSourceOutputDirectory.set(file(querydslDir))
}

tasks.named('clean') {
    doLast {
        file(querydslDir).deleteDir()
    }
}